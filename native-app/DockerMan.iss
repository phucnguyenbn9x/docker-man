; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "DockerMan"
#define MyAppVersion "1.0719.0"
#define MyAppPublisher "I2G"
#define MyAppURL "http://www.i2g.com/"
#define MyAppExeName "docker-man.exe"

#define UserFolder "{userappdata}\..\.."
#define ProjectPath "{pf}"
#define DockerManPath "D:\workspace\docker-man\native-app\docker-man-win32-x64\*"
#define Docker "Docker for Windows Installer.exe"
#define DockerPath "D:\workspace\docker-man\native-app\prerequisites\Docker for Windows Installer.exe"
#define DockerUrl "https://download.docker.com/win/stable/Docker%20for%20Windows%20Installer.exe"
#define DaemonJsonPath "D:\workspace\docker-man\native-app\prerequisites\daemon.json"
#define DockerRegistryStorage "D:\workspace\docker-man\native-app\docker-man-win32-x64\i2g_registry"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{1A301766-DB80-467F-9518-89AD5C8CFD9A}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\{#MyAppName}
DefaultGroupName={#MyAppName}
OutputDir=D:\workspace\docker-man\native-app
OutputBaseFilename=DockerMan-Setup
Compression=lzma
SolidCompression=yes
ChangesEnvironment=yes

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: {#DockerManPath}; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs; BeforeInstall: InstallDockerConfirm;
Source: {#DockerRegistryStorage}; DestDir: "{app}"; Flags: recursesubdirs createallsubdirs;
Source: "{#DaemonJsonPath}"; DestDir: "{#UserFolder}\.docker"; Flags: ignoreversion;
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Code]
var checkInstallDocker: Boolean;

function InitializeSetup(): Boolean;
begin
  if RegKeyExists(HKEY_LOCAL_MACHINE_64, 'SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Docker for Windows') then begin
    checkInstallDocker := False;
  end else begin
    checkInstallDocker := True;
  end;
  Result := True;
end;

procedure ExitProcess(uExitCode: Integer);
  external 'ExitProcess@kernel32.dll stdcall';
var
  dockerChecked: Boolean;
procedure InstallDockerConfirm;
var
  ErrCode: Integer;
begin
  if not dockerChecked and checkInstallDocker then begin
    SuppressibleMsgBox('Docker is required. You need install Docker before install DockerMan', mbError, MB_OK, MB_OK);
    ExitProcess(1);
  end;
end;

[Registry]
Root: HKCU; Subkey: "Environment"; ValueType:string; ValueName: "I2G_DOCKERMAN"; \
    ValueData: {app}; Flags: preservestringtype

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]

Filename: "{cmd}"; Parameters: "/C cd {app}\init & set I2G_DOCKERMAN={app}&""{app}\init\run.bat"""; Flags: waituntilterminated runascurrentuser;
;Filename: "{app}\init\run.bat"; Flags: waituntilterminated runascurrentuser postinstall; Description: "Start i2g services now"; Parameters: "/C set I2G_DOCKERMAN={app}"
;Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent
Filename: "http://localhost:9090"; Flags: shellexec runasoriginaluser postinstall skipifsilent; Description: "Open I2G App"

[UninstallRun]
Filename: "{app}\init\stop.bat"; Flags: waituntilterminated